import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter_tindercard/flutter_tindercard.dart';
import 'package:http/http.dart' as http;

import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:matching_app_framework/model/profileImage.dart';
import 'package:sprintf/sprintf.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:adobe_xd/pinned.dart';
import 'package:adobe_xd/page_link.dart';

import 'dart:io';
import 'dart:typed_data';
import 'dart:async';
import 'dart:ui' as ui;
import 'dart:convert';

import 'package:matching_app_framework/service/profile.dart';

import 'package:matching_app_framework/model/profile.dart';
import 'package:matching_app_framework/ui/parts/appbar.dart';
import 'package:matching_app_framework/ui/parts/appbar_bottom.dart';
import 'package:matching_app_framework/ui/parts/swap_card.dart';
import 'package:matching_app_framework/ui/parts/dialog.dart';
import 'package:matching_app_framework/ui/profile.dart';
import 'package:matching_app_framework/ui/setting.dart';
import 'package:matching_app_framework/service/profile.dart';

import 'dart:async';
import 'package:http/http.dart' as http;

// class Home extends StatefulWidget {
class Home extends StatefulWidget {
  Home({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _HomeState createState() => _HomeState();
}

class _HomeState extends State<Home> {
  int _counter = 0;
  String _lastName = '';
  String _firstName = '';
  String _bio = '';
  ProfileService profileService;
  SwapCard swapCard;
  TinderSwapCard cards;
  List<Profile> profiles;
  CardController controller;
  int swapCount = 0;

  @override
  Widget build(BuildContext context) {

    this.profileService = new ProfileService();
    this.swapCard = new SwapCard();
    this._fetchProfilesAwait();
    this.cards = this._getSwapCard(context, this.profiles);
    this._lastName = (this.profiles != null) ? this.profiles[0].lastName : "_今田";
    this._firstName = (this.profiles != null) ? this.profiles[0].firstName : "_美桜";
    this._bio = (this.profiles != null) ? this.profiles[0].bio : "BIRTHDAY：1997/3/5\nHEIGHT：157 cm\nSHOES：23.5 cm\n趣味：語学勉強\n特技：福岡弁の早口言葉";

    return Scaffold(
      appBar: getAppBar(context, AppLocalizations.of(context).title_home),
      bottomNavigationBar: getAppBarBottom(context, widget.title),
      body: new Stack(
        children: <Widget>[
          Column(
            children: <Widget>[
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: this.cards,
                ),
              ),
          ]),
          this.showExplainDislike(true),
          this.showExplainLike(true),
      ]),
      // floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
      floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
      floatingActionButton: Container(
        margin: EdgeInsets.only(bottom: 100.0),
        child: FloatingActionButton(
          onPressed: _incrementCounter,
          tooltip: 'Increment',
          child: Icon(Icons.favorite),
        ),
      ),
    );
  }

  void _incrementCounter() {
    setState(() {
      _counter++;
      this._fetchProfilesAwait();
      this.cards = this._getSwapCard(context, this.profiles);
    });
  }

  void _fetchProfilesAwait() async {
    Future<List> _futureOfList = this.profileService.fetchProfiles();
    this.profiles = await _futureOfList;
  }

  void _showProfileDetail(Profile profile) {
    this._lastName = profile.lastName;
    this._firstName = profile.firstName;
    this._bio = profile.bio;
  }

  TinderSwapCard _getSwapCard(BuildContext context, List<Profile> profiles) {

    return new TinderSwapCard(
      swipeUp: true,
      swipeDown: true,
      orientation: AmassOrientation.BOTTOM,
      totalNum: (profiles != null) ? profiles.length : 1,
      stackNum: 3,
      swipeEdge: 4.0,
      maxWidth: MediaQuery.of(context).size.width * 0.9,
      maxHeight: MediaQuery.of(context).size.height * 0.9,
      minWidth: MediaQuery.of(context).size.width * 0.89,
      minHeight: MediaQuery.of(context).size.height * 0.89,
      cardBuilder: (context, index) => Card(
        shadowColor: Colors.grey.withOpacity(0.5),
        elevation: 8,
        clipBehavior: Clip.antiAlias,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(20),
          // side: BorderSide(
          //   color: Colors.grey.withOpacity(0.5),
          //   width: 1,
          // ),
        ),
        child: Column(
          // mainAxisAlignment: MainAxisAlignment.start,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [

            // ClipRRect(
            //   borderRadius: BorderRadius.circular(15.0),
            //   child: Image.network((profiles != null) ? profiles[index].imageData : "https://matching-app-fw.s3-ap-northeast-1.amazonaws.com/assets/mio_imada.jpg", fit: BoxFit.cover),
            // ),
            Expanded(
              flex: 1,
              child: Ink.image(
                image: NetworkImage(
                  'https://matching-app-fw.s3-ap-northeast-1.amazonaws.com/assets/mio_imada3.jpg',
                ),
                fit: BoxFit.cover,
              ),
            ),
            Padding(
              padding: EdgeInsets.all(24),
              child: RichText(
                text: TextSpan(
                  text: (profiles != null) ? profiles[index].lastName + " " + profiles[index].firstName : "今田 美桜",
                  style: TextStyle(
                    fontSize: 18,
                    color: Colors.black,
                    fontWeight: FontWeight.bold,
                  ),
                  children: <TextSpan>[
                    TextSpan(
                      text: '　24歳 / 大阪市（ここから5km）',
                      style: TextStyle(
                        fontSize: 12,
                        fontWeight: FontWeight.normal,
                      ),
                    )
                  ],
                ),
              ),
            ),
            // ListTile(
            //   leading: Icon(Icons.access_alarms),
            //   title: Text((profiles != null) ? profiles[index].lastName + " " + profiles[index].firstName : "今田 美桜"),
            //   subtitle: Text(
            //     (profiles != null) ? profiles[index].bio : "BIRTHDAY：1997/3/5\nHEIGHT：157 cm\nSHOES：23.5 cm\n趣味：語学勉強\n特技：福岡弁の早口言葉",
            //     style:
            //     TextStyle(color: Colors.black.withOpacity(0.6)),
            //   ),
            // ),
          ],
        ),
      ),
      
      cardController: controller = CardController(),
      swipeUpdateCallback:
          (DragUpdateDetails details, Alignment align) {
        /// Get swiping card's alignment
        // print(details);
        // print(align);
        // print(align.x);

        if (align.x < -5) {
          print("swipeUpdateCallback - LEFT");
          //Card is LEFT swiping
          showDislikeDialog(context);

        } else if (align.x > 5) {
          print("swipeUpdateCallback - RIGHT");
          //Card is RIGHT swiping
          showLikeDialog(context);

        }
        else if (align.x == 0) {
          print("swipeUpdateCallback - MIDDLE");
        }
      },
      swipeCompleteCallback:
          (CardSwipeOrientation orientation, int index) {
        /// Get orientation & index of swiped card!
        print("swipeCompleteCallback");
        print(orientation);
        print(index);
        print("=================");

        if (orientation == CardSwipeOrientation.RECOVER) {
          // Navigator.push(
          //     context,
          //     MaterialPageRoute(builder: (context) => SettingPage(title: "設定"),
          //     )
          // );
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) =>
                ProfilePage(
                  title: AppLocalizations.of(context).hello("Profile Page"),
                  profileId: 1,
                  profile: this.profiles[0],
                  profileService: this.profileService,
                  // imageList: this.profileImages,
                ),
            )
          );
        }
      },
    );
  }

  Container showExplainDislike(bool isShow) {
    if (!isShow) {
      return Container();
    }
    return Container( // 微妙
      // Stackのサイズ以上のサイズは設定できない
      // この場合は(height:250 width:250)に縮小されて表示される
      height: 180.0,
      width: 80.0,
      margin: EdgeInsets.only(top: 320, left: 15),
      // padding: EdgeInsets.only(top: 20),
      alignment: Alignment.topRight,
      child:
      Stack(
        children: <Widget>[
          Pinned.fromPins(
            Pin(start: 0.0, end: 0.0),
            Pin(start: 0.0, end: 0.0),
            child: SvgPicture.string(
              '<svg viewBox="160.0 269.0 50.0 113.0" ><path transform="translate(160.0, 269.0)" d="M 10 0 L 40 0 C 45.52284622192383 0 50 5.059181690216064 50 11.29999923706055 L 50 101.7000045776367 C 50 107.9408111572266 45.52284622192383 113 40 113 L 10 113 C 4.477152347564697 113 0 107.9408111572266 0 101.7000045776367 L 0 11.29999923706055 C 0 5.059181690216064 4.477152347564697 0 10 0 Z" fill="#ffffff" fill-opacity="0.75" stroke="none" stroke-width="1" stroke-opacity="0.75" stroke-miterlimit="4" stroke-linecap="butt" /></svg>',
              allowDrawingOutsideViewBox: true,
              fit: BoxFit.fill,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 20.0, middle: 0.5),
            Pin(size: 24.0, middle: 0.3838),
            child: Text(
              '微妙',
              style: TextStyle(
                fontFamily: 'Hiragino Sans',
                fontSize: 10,
                color: const Color(0xff3bb4ff),
                height: 2.4,
              ),
              textHeightBehavior:
              TextHeightBehavior(applyHeightToFirstAscent: false),
              textAlign: TextAlign.left,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 20.0, middle: 0.5),
            Pin(size: 20.0, start: 15.0),
            child:
            // Adobe XD layer: 'times-solid' (shape)
            SvgPicture.string(
              '<svg viewBox="175.0 284.0 20.0 20.0" ><path transform="translate(175.0, 204.0)" d="M 13.79090976715088 90 L 19.47670555114746 84.31420135498047 C 20.1744327545166 83.61647796630859 20.1744327545166 82.4852294921875 19.47670555114746 81.78693389892578 L 18.21306991577148 80.52329254150391 C 17.51534271240234 79.82556915283203 16.38409233093262 79.82556915283203 15.6857967376709 80.52329254150391 L 10 86.20909118652344 L 4.314204692840576 80.52329254150391 C 3.616477489471436 79.82556915283203 2.485227346420288 79.82556915283203 1.786931872367859 80.52329254150391 L 0.5232954621315002 81.78693389892578 C -0.1744318008422852 82.48465728759766 -0.1744318008422852 83.61590576171875 0.5232954621315002 84.31420135498047 L 6.209091186523438 90 L 0.5232954621315002 95.685791015625 C -0.1744318008422852 96.38352203369141 -0.1744318008422852 97.5147705078125 0.5232954621315002 98.21306610107422 L 1.786931872367859 99.47669982910156 C 2.484659194946289 100.174430847168 3.616477489471436 100.174430847168 4.314204692840576 99.47669982910156 L 10 93.79090881347656 L 15.6857967376709 99.47669982910156 C 16.38352394104004 100.174430847168 17.51534271240234 100.174430847168 18.21306991577148 99.47669982910156 L 19.47670555114746 98.21306610107422 C 20.1744327545166 97.51534271240234 20.1744327545166 96.38409423828125 19.47670555114746 95.685791015625 L 13.79090976715088 90 Z" fill="#6ac4fc" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>',
              allowDrawingOutsideViewBox: true,
              fit: BoxFit.fill,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 28.6, middle: 0.5137),
            Pin(size: 40.0, end: 15.0),
            child: Stack(
              children: <Widget>[
                Pinned.fromPins(
                  Pin(start: 1.1, end: 0.0),
                  Pin(size: 30.2, end: 0.0),
                  child: SvgPicture.string(
                    '<svg viewBox="1.1 9.8 27.5 30.2" ><path transform="translate(-27.28, -23.23)" d="M 51.20669174194336 40.53401184082031 C 50.3982048034668 38.82688522338867 48.4695930480957 38.03171539306641 46.89015579223633 38.75790405273438 C 46.55429840087891 38.91281509399414 46.26685333251953 39.13490676879883 46.01571273803711 39.39391326904297 C 45.65504837036133 38.67983245849609 45.05050277709961 38.13459396362305 44.28800964355469 37.86228179931641 C 43.49829483032227 37.57966995239258 42.64140319824219 37.62082290649414 41.87346649169922 37.9730224609375 C 41.39176940917969 38.19510650634766 41.00326538085938 38.53036499023438 40.69887161254883 38.92189788818359 C 40.46347045898438 38.75305557250977 40.21172714233398 38.60419464111328 39.92972946166992 38.50373840332031 C 39.139404296875 38.22113418579102 38.28250885009766 38.26228332519531 37.51578903198242 38.61447906494141 C 37.17992401123047 38.76879501342773 36.89369201660156 38.98301696777344 36.6419563293457 39.22628402709961 L 34.61651611328125 34.8328971862793 C 33.89275741577148 33.26374816894531 32.0095329284668 32.58295440673828 30.41859436035156 33.3163948059082 C 29.65187072753906 33.6697998046875 29.06547927856445 34.29673767089844 28.76774215698242 35.08100891113281 C 28.46577453613281 35.87254333496094 28.49421691894531 36.73004531860352 28.84641647338867 37.49253463745117 L 33.80743026733398 48.25329971313477 L 33.66703796386719 48.15526580810547 C 32.17352676391602 47.09201431274414 30.06941986083984 47.43574142456055 28.97289276123047 48.91957092285156 C 28.28302383422852 49.85271072387695 27.81584548950195 51.38797378540039 29.49876403808594 53.40372848510742 C 29.56351852416992 53.48239517211914 36.10820770263672 61.27248764038086 42.39268493652344 63.18354415893555 C 42.49677276611328 63.21562576293945 42.60025405883789 63.23013687133789 42.70373153686523 63.23013687133789 C 43.15880584716797 63.23013687133789 43.58059310913086 62.9354362487793 43.72038269042969 62.47613143920898 C 43.89103698730469 61.91454696655273 43.57515335083008 61.31968307495117 43.01235580444336 61.1496467590332 C 38.29643249511719 59.71361923217773 32.83858871459961 54.0881462097168 31.13267135620117 52.04092788696289 C 30.16685104370117 50.88388442993164 30.49060821533203 50.44514846801758 30.68365097045898 50.18312454223633 C 31.09514999389648 49.62638473510742 31.88063430786133 49.49385833740234 32.43737411499023 49.89022445678711 L 35.58535766601562 52.10931777954102 L 36.64981842041016 54.41856002807617 C 36.82894134521484 54.80827713012695 37.21442413330078 55.03641891479492 37.61624145507812 55.03641891479492 C 37.76511001586914 55.03641891479492 37.91699981689453 55.00494766235352 38.06103134155273 54.93898391723633 C 38.59416580200195 54.69329452514648 38.82775115966797 54.06091690063477 38.58145523071289 53.52778244018555 L 30.77865982055664 36.60114288330078 C 30.66791534423828 36.36090469360352 30.6600456237793 36.09040069580078 30.75566101074219 35.83684539794922 C 30.85490798950195 35.57662963867188 31.05158233642578 35.36724472045898 31.30937194824219 35.2480354309082 C 31.83403778076172 35.00657272338867 32.4525032043457 35.21898651123047 32.68427276611328 35.72307968139648 L 35.94179534912109 42.78880310058594 L 35.94179534912109 42.78940200805664 L 35.94239807128906 42.79001235961914 L 37.72214508056641 46.65025329589844 C 37.96783447265625 47.18339538574219 38.59960556030273 47.4175910949707 39.13335037231445 47.17129516601562 C 39.6664924621582 46.92560195922852 39.90007781982422 46.29322052001953 39.65378189086914 45.76008605957031 L 37.87343215942383 41.89801788330078 C 37.64226531982422 41.39392471313477 37.88008499145508 40.78817367553711 38.40535354614258 40.54551315307617 C 38.66436004638672 40.42568969726562 38.95059585571289 40.41238021850586 39.21323394775391 40.50617980957031 C 39.4673957824707 40.59695053100586 39.66890335083008 40.77970123291016 39.78025436401367 41.01995086669922 L 41.56000137329102 44.88079833984375 L 41.56060028076172 44.88200759887695 L 41.80327224731445 45.40788650512695 C 41.98239517211914 45.79759979248047 42.36727142333984 46.0257453918457 42.76969528198242 46.0257453918457 C 42.91855621337891 46.0257453918457 43.07045745849609 45.99488067626953 43.21448135375977 45.92892074584961 C 43.74761962890625 45.6832275390625 43.98059844970703 45.05084991455078 43.73430252075195 44.51771545410156 L 42.23231887817383 41.25777053833008 C 41.99994659423828 40.75368118286133 42.23837280273438 40.14672088623047 42.76303863525391 39.90404891967773 C 43.02264404296875 39.78423309326172 43.30888366699219 39.77091598510742 43.57151794433594 39.86471557617188 C 43.82567596435547 39.95548629760742 44.02719497680664 40.13824462890625 44.137939453125 40.37849044799805 L 46.0423469543457 44.50923919677734 C 46.28742980957031 45.04298782348633 46.9198112487793 45.27656936645508 47.45355224609375 45.0302734375 C 47.98668670654297 44.78458404541016 48.22027587890625 44.15219879150391 47.97397994995117 43.61845779418945 L 47.38516616821289 42.34159088134766 L 47.38456344604492 42.33977508544922 C 47.22420120239258 41.99363327026367 47.19152069091797 41.62085723876953 47.28955459594727 41.29105758666992 C 47.33917617797852 41.12826919555664 47.46686172485352 40.83356475830078 47.77972793579102 40.68893051147461 C 48.29652404785156 40.44989395141602 48.98820877075195 40.80451965332031 49.29078674316406 41.46110534667969 C 49.30289077758789 41.48470306396484 49.31438446044922 41.50830078125 49.32648468017578 41.53069305419922 C 49.37005615234375 41.60997009277344 53.72229385375977 49.56405258178711 53.74225997924805 56.58862686157227 C 53.74468612670898 57.17501449584961 54.22033309936523 57.64885330200195 54.80611801147461 57.64885330200195 L 54.80974960327148 57.64885330200195 C 55.39734268188477 57.64642715454102 55.87238693237305 57.17018508911133 55.86996841430664 56.58137130737305 C 55.84817886352539 49.16767883300781 51.56856918334961 41.19483947753906 51.20669174194336 40.53401184082031 Z" fill="#6ac4fc" stroke="none" stroke-width="1" stroke-miterlimit="10" stroke-linecap="butt" /></svg>',
                    allowDrawingOutsideViewBox: true,
                    fit: BoxFit.fill,
                  ),
                ),
                Pinned.fromPins(
                  Pin(start: 0.0, end: 2.8),
                  Pin(size: 6.8, start: 0.0),
                  child: SvgPicture.string(
                    '<svg viewBox="0.0 0.0 25.7 6.8" ><path transform="translate(-26.59, -16.84)" d="M 30.44043731689453 23.60438919067383 C 30.78537368774414 23.60438919067383 31.12364959716797 23.43675994873047 31.32879638671875 23.12692451477051 C 31.65194702148438 22.63675498962402 31.51699829101562 21.97653388977051 31.02743148803711 21.65278053283691 L 30.47734832763672 21.28908729553223 C 37.35729598999023 19.86517143249512 44.76674270629883 19.93113136291504 50.99917602539062 21.52569961547852 C 51.08752822875977 21.54869651794434 51.17648696899414 21.55898094177246 51.26422882080078 21.55898094177246 C 51.73806762695312 21.55898094177246 52.17074584960938 21.24007034301758 52.29359436035156 20.75958061218262 C 52.43882751464844 20.19013404846191 52.0963134765625 19.61100578308105 51.52687072753906 19.46516609191895 C 44.94889450073242 17.78285026550293 37.13157653808594 17.70296859741211 29.90124893188477 19.22007942199707 L 30.38173675537109 18.49208641052246 C 30.70609664916992 18.00191307067871 30.57114791870117 17.3423023223877 30.08097839355469 17.01854705810547 C 29.5901985168457 16.69358062744141 28.93119430541992 16.82913398742676 28.60743713378906 17.31930732727051 L 26.76294326782227 20.11086082458496 C 26.60741806030273 20.34626197814941 26.5517463684082 20.63370704650879 26.60802459716797 20.9096565246582 C 26.66490936279297 21.18681716918945 26.82829666137695 21.42887687683105 27.06370162963867 21.58500480651855 L 29.85404586791992 23.42828941345215 C 30.03498840332031 23.54750442504883 30.23892211914062 23.60438919067383 30.44043731689453 23.60438919067383 Z" fill="#6ac4fc" stroke="none" stroke-width="1" stroke-miterlimit="10" stroke-linecap="butt" /></svg>',
                    allowDrawingOutsideViewBox: true,
                    fit: BoxFit.fill,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Align showExplainLike(bool isShow) {
    if (!isShow) {
      return Align();
    }
    return Align(
      alignment: Alignment.topRight,
      child:
      Container( // 好き
        // Stackのサイズ以上のサイズは設定できない
        // この場合は(height:250 width:250)に縮小されて表示される
        height: 180.0,
        width: 80.0,
        margin: EdgeInsets.only(top: 320, right: 15),
        // padding: EdgeInsets.only(top: 20),
        alignment: Alignment.topRight,
        child:
        Stack(
          children: <Widget>[
            Pinned.fromPins(
              Pin(start: 0.0, end: 0.0),
              Pin(start: 0.0, end: 0.0),
              child: Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(10.0),
                  color: const Color(0xbfffffff),
                ),
              ),
            ),
            Pinned.fromPins(
              Pin(size: 22.0, middle: 0.5),
              Pin(size: 20.0, start: 15.0),
              child:
              // Adobe XD layer: '817c46f0490bf236f3c…' (group)
              Stack(
                children: <Widget>[
                  Pinned.fromPins(
                    Pin(start: 0.0, end: 0.0),
                    Pin(start: 0.0, end: 0.0),
                    child: Stack(
                      children: <Widget>[
                        Pinned.fromPins(
                          Pin(start: 0.0, end: 0.0),
                          Pin(start: 0.0, end: 0.0),
                          child: SvgPicture.string(
                            '<svg viewBox="0.0 0.0 22.0 20.0" ><path transform="translate(-9.97, -69.7)" d="M 12.18925476074219 82.45816040039062 C 13.55418014526367 84.33121490478516 15.3276834487915 85.83477783203125 17.17302513122559 87.19425964355469 C 17.17302513122559 87.19425964355469 19.37306213378906 88.77217864990234 20.3832836151123 89.50652313232422 C 20.75594520568848 89.76447296142578 21.23412322998047 89.76447296142578 21.58882141113281 89.50652313232422 C 22.59904670715332 88.77217864990234 24.78112411499023 87.19425964355469 24.78112411499023 87.19425964355469 C 26.62421989440918 85.83477783203125 28.3618049621582 84.34748840332031 29.74468040466309 82.45816040039062 C 30.9142951965332 80.84304809570312 31.78307914733887 78.93281555175781 31.94248008728027 76.91334533691406 C 32.22533416748047 73.24160003662109 29.93775177001953 69.71858978271484 26.14380073547363 69.71858978271484 C 23.92805290222168 69.71858978271484 21.97719192504883 70.96652221679688 20.98269081115723 72.82098388671875 C 19.95674705505371 70.94792175292969 18.02385711669922 69.69998931884766 15.80585479736328 69.69998931884766 C 12.02986431121826 69.69998931884766 9.706354141235352 73.22533416748047 9.989215850830078 76.89476013183594 C 10.15085220336914 78.91422271728516 11.00168228149414 80.84304809570312 12.18925476074219 82.45816040039062 Z" fill="#fc6a73" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>',
                            allowDrawingOutsideViewBox: true,
                            fit: BoxFit.fill,
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
            Pinned.fromPins(
              Pin(size: 20.0, middle: 0.5),
              Pin(size: 24.0, middle: 0.3838),
              child: Text(
                '好き',
                style: TextStyle(
                  fontFamily: 'Hiragino Sans',
                  fontSize: 10,
                  color: const Color(0xfffc6a73),
                  height: 2.4,
                ),
                textHeightBehavior:
                TextHeightBehavior(applyHeightToFirstAscent: false),
                textAlign: TextAlign.left,
              ),
            ),
            Pinned.fromPins(
              Pin(size: 28.6, middle: 0.5137),
              Pin(size: 40.0, end: 15.0),
              child: Stack(
                children: <Widget>[
                  Pinned.fromPins(
                    Pin(start: 0.0, end: 1.1),
                    Pin(size: 30.2, end: 0.0),
                    child: SvgPicture.string(
                      '<svg viewBox="0.0 9.8 27.5 30.2" ><path transform="translate(-28.35, -23.23)" d="M 33.00917434692383 40.53401184082031 C 33.81766128540039 38.82688522338867 35.74627304077148 38.03171539306641 37.32571411132812 38.75790405273438 C 37.66157150268555 38.91281509399414 37.94901657104492 39.13490676879883 38.20015716552734 39.39391326904297 C 38.56082153320312 38.67983245849609 39.16536712646484 38.13459396362305 39.92786026000977 37.86228179931641 C 40.71757507324219 37.57966995239258 41.57446670532227 37.62082290649414 42.34240341186523 37.9730224609375 C 42.82410049438477 38.19510650634766 43.21260452270508 38.53036499023438 43.51699829101562 38.92189788818359 C 43.75239944458008 38.75305557250977 44.00414276123047 38.60419464111328 44.28614044189453 38.50373840332031 C 45.07646560668945 38.22113418579102 45.9333610534668 38.26228332519531 46.70008087158203 38.61447906494141 C 47.03594589233398 38.76879501342773 47.32217788696289 38.98301696777344 47.57391357421875 39.22628402709961 L 49.5993537902832 34.8328971862793 C 50.32311248779297 33.26374816894531 52.20633697509766 32.58295440673828 53.79727554321289 33.3163948059082 C 54.56399917602539 33.6697998046875 55.150390625 34.29673767089844 55.44812774658203 35.08100891113281 C 55.75009536743164 35.87254333496094 55.72165298461914 36.73004531860352 55.36945343017578 37.49253463745117 L 50.40843963623047 48.25330352783203 L 50.54883193969727 48.15526962280273 C 52.04234313964844 47.09201431274414 54.14645004272461 47.43574142456055 55.24297714233398 48.91957473754883 C 55.93284606933594 49.85271453857422 56.4000244140625 51.38797760009766 54.71710586547852 53.40373229980469 C 54.65235137939453 53.48239898681641 48.10766220092773 61.27249145507812 41.82318496704102 63.18354797363281 C 41.71909713745117 63.21562957763672 41.61561584472656 63.23014068603516 41.51213836669922 63.23014068603516 C 41.05706405639648 63.23014068603516 40.63527679443359 62.93544006347656 40.49548721313477 62.47613525390625 C 40.32483291625977 61.91455078125 40.64071655273438 61.31968688964844 41.20351409912109 61.14965057373047 C 45.91943740844727 59.713623046875 51.37728118896484 54.08815002441406 53.08319854736328 52.04093170166016 C 54.04901885986328 50.88388824462891 53.72526168823242 50.44515228271484 53.53221893310547 50.18312835693359 C 53.12071990966797 49.62638854980469 52.33523559570312 49.49386215209961 51.77849578857422 49.89022827148438 L 48.63051223754883 52.10932159423828 L 47.5660514831543 54.41856384277344 C 47.38692855834961 54.80828094482422 47.00144577026367 55.03642272949219 46.59962844848633 55.03642272949219 C 46.45075988769531 55.03642272949219 46.29887008666992 55.00495147705078 46.15483856201172 54.93898773193359 C 45.6217041015625 54.69329833984375 45.38811874389648 54.06092071533203 45.63441467285156 53.52778625488281 L 53.43721008300781 36.60114288330078 C 53.54795455932617 36.36090469360352 53.55582427978516 36.09040069580078 53.46020889282227 35.83684539794922 C 53.3609619140625 35.57662963867188 53.16428756713867 35.36724472045898 52.90649795532227 35.2480354309082 C 52.38183212280273 35.00657272338867 51.76336669921875 35.21898651123047 51.53159713745117 35.72307968139648 L 48.27407455444336 42.78880310058594 L 48.27407455444336 42.78940200805664 L 48.27347183227539 42.79001235961914 L 46.49372482299805 46.65025329589844 C 46.2480354309082 47.18339538574219 45.61626434326172 47.4175910949707 45.08251953125 47.17129516601562 C 44.54937744140625 46.92560195922852 44.31579208374023 46.29322052001953 44.56208801269531 45.76008605957031 L 46.34243774414062 41.89801788330078 C 46.57360458374023 41.39392471313477 46.33578491210938 40.78817367553711 45.81051635742188 40.54551315307617 C 45.55150985717773 40.42568969726562 45.26527404785156 40.41238021850586 45.00263595581055 40.50617980957031 C 44.74847412109375 40.59695053100586 44.54696655273438 40.77970123291016 44.43561553955078 41.01995086669922 L 42.65586853027344 44.88079833984375 L 42.65526962280273 44.88200759887695 L 42.41259765625 45.40788650512695 C 42.23347473144531 45.79759979248047 41.84859848022461 46.0257453918457 41.44617462158203 46.0257453918457 C 41.29731369018555 46.0257453918457 41.14541244506836 45.99488067626953 41.00138854980469 45.92892074584961 C 40.4682502746582 45.6832275390625 40.23527145385742 45.05084991455078 40.4815673828125 44.51771545410156 L 41.98355102539062 41.25777053833008 C 42.21592330932617 40.75368118286133 41.97749710083008 40.14672088623047 41.45283126831055 39.90404891967773 C 41.1932258605957 39.78423309326172 40.90698623657227 39.77091598510742 40.64435195922852 39.86471557617188 C 40.39019393920898 39.95548629760742 40.18867492675781 40.13824462890625 40.07793045043945 40.37849044799805 L 38.17352294921875 44.50923919677734 C 37.92844009399414 45.04298782348633 37.29605865478516 45.27656936645508 36.7623176574707 45.0302734375 C 36.22918319702148 44.78458404541016 35.99559020996094 44.15219879150391 36.24188995361328 43.61845779418945 L 36.83070373535156 42.34159088134766 L 36.83130645751953 42.33977508544922 C 36.99166870117188 41.99363327026367 37.02434921264648 41.62085723876953 36.92631530761719 41.29105758666992 C 36.87669372558594 41.12826919555664 36.74900817871094 40.83356475830078 36.43614196777344 40.68893051147461 C 35.91934204101562 40.44989395141602 35.22765731811523 40.80451965332031 34.92507934570312 41.46110534667969 C 34.9129753112793 41.48470306396484 34.90148162841797 41.50830078125 34.88938140869141 41.53069305419922 C 34.84580993652344 41.60997009277344 30.49357223510742 49.56405639648438 30.47360610961914 56.58863067626953 C 30.4711799621582 57.17501831054688 29.99553298950195 57.64885711669922 29.40974807739258 57.64885711669922 L 29.4061164855957 57.64885711669922 C 28.81852340698242 57.64643096923828 28.34347915649414 57.17018890380859 28.34589767456055 56.58137512207031 C 28.3676872253418 49.16768264770508 32.64729690551758 41.19483947753906 33.00917434692383 40.53401184082031 Z" fill="#fc6a73" stroke="none" stroke-width="1" stroke-miterlimit="10" stroke-linecap="butt" /></svg>',
                      allowDrawingOutsideViewBox: true,
                      fit: BoxFit.fill,
                    ),
                  ),
                  Pinned.fromPins(
                    Pin(start: 2.8, end: 0.0),
                    Pin(size: 6.8, start: 0.0),
                    child: SvgPicture.string(
                      '<svg viewBox="2.8 0.0 25.7 6.8" ><path transform="translate(-23.74, -16.84)" d="M 48.47311782836914 23.60438919067383 C 48.12818145751953 23.60438919067383 47.7899055480957 23.43675994873047 47.58475875854492 23.12692451477051 C 47.2616081237793 22.63675498962402 47.39655685424805 21.97653388977051 47.88612365722656 21.65278053283691 L 48.43620681762695 21.28908729553223 C 41.55625915527344 19.86517143249512 34.14681243896484 19.93113136291504 27.91437530517578 21.52569961547852 C 27.82602310180664 21.54869651794434 27.73706436157227 21.55898094177246 27.64932250976562 21.55898094177246 C 27.17548370361328 21.55898094177246 26.74280548095703 21.24007034301758 26.61995697021484 20.75958061218262 C 26.47472381591797 20.19013404846191 26.81723785400391 19.61100578308105 27.38668060302734 19.46516609191895 C 33.96466064453125 17.78285026550293 41.78197860717773 17.70296859741211 49.01230621337891 19.22007942199707 L 48.53181838989258 18.49208641052246 C 48.20745849609375 18.00191307067871 48.3424072265625 17.3423023223877 48.83257675170898 17.01854705810547 C 49.32335662841797 16.69358062744141 49.98236083984375 16.82913398742676 50.30611801147461 17.31930732727051 L 52.15061187744141 20.11086082458496 C 52.30613708496094 20.34626197814941 52.36180877685547 20.63370704650879 52.3055305480957 20.9096565246582 C 52.2486457824707 21.18681716918945 52.08525848388672 21.42887687683105 51.849853515625 21.58500480651855 L 49.05950927734375 23.42828941345215 C 48.87856674194336 23.54750442504883 48.67463302612305 23.60438919067383 48.47311782836914 23.60438919067383 Z" fill="#fc6a73" stroke="none" stroke-width="1" stroke-miterlimit="10" stroke-linecap="butt" /></svg>',
                      allowDrawingOutsideViewBox: true,
                      fit: BoxFit.fill,
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
